// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: coordinator.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_coordinator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

type GetStatusResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MemberId             string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	LocalNodes           []*NodeInfo            `protobuf:"bytes,2,rep,name=local_nodes,json=localNodes,proto3" json:"local_nodes,omitempty"`
	Peers                []*PeerInfo            `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	TotalFiles           int32                  `protobuf:"varint,4,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	TotalStorageCapacity int64                  `protobuf:"varint,5,opt,name=total_storage_capacity,json=totalStorageCapacity,proto3" json:"total_storage_capacity,omitempty"`
	UsedStorageCapacity  int64                  `protobuf:"varint,6,opt,name=used_storage_capacity,json=usedStorageCapacity,proto3" json:"used_storage_capacity,omitempty"`
	RemoteNodes          []*NodeInfo            `protobuf:"bytes,7,rep,name=remote_nodes,json=remoteNodes,proto3" json:"remote_nodes,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_coordinator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *GetStatusResponse) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *GetStatusResponse) GetLocalNodes() []*NodeInfo {
	if x != nil {
		return x.LocalNodes
	}
	return nil
}

func (x *GetStatusResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *GetStatusResponse) GetTotalFiles() int32 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *GetStatusResponse) GetTotalStorageCapacity() int64 {
	if x != nil {
		return x.TotalStorageCapacity
	}
	return 0
}

func (x *GetStatusResponse) GetUsedStorageCapacity() int64 {
	if x != nil {
		return x.UsedStorageCapacity
	}
	return 0
}

func (x *GetStatusResponse) GetRemoteNodes() []*NodeInfo {
	if x != nil {
		return x.RemoteNodes
	}
	return nil
}

type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	IsHealthy     bool                   `protobuf:"varint,3,opt,name=is_healthy,json=isHealthy,proto3" json:"is_healthy,omitempty"`
	LastSeen      int64                  `protobuf:"varint,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_coordinator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *PeerInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *PeerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PeerInfo) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

func (x *PeerInfo) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TotalCapacity int64                  `protobuf:"varint,4,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_coordinator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterNodeRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *RegisterNodeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterNodeRequest) GetTotalCapacity() int64 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_coordinator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PeerConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerConnectRequest) Reset() {
	*x = PeerConnectRequest{}
	mi := &file_coordinator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectRequest) ProtoMessage() {}

func (x *PeerConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectRequest.ProtoReflect.Descriptor instead.
func (*PeerConnectRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *PeerConnectRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *PeerConnectRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PeerConnectRequest) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type PeerConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerConnectResponse) Reset() {
	*x = PeerConnectResponse{}
	mi := &file_coordinator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectResponse) ProtoMessage() {}

func (x *PeerConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectResponse.ProtoReflect.Descriptor instead.
func (*PeerConnectResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

func (x *PeerConnectResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *PeerConnectResponse) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *PeerConnectResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type PeerDisconnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerDisconnectRequest) Reset() {
	*x = PeerDisconnectRequest{}
	mi := &file_coordinator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerDisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerDisconnectRequest) ProtoMessage() {}

func (x *PeerDisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerDisconnectRequest.ProtoReflect.Descriptor instead.
func (*PeerDisconnectRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{7}
}

func (x *PeerDisconnectRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type PeerDisconnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerDisconnectResponse) Reset() {
	*x = PeerDisconnectResponse{}
	mi := &file_coordinator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerDisconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerDisconnectResponse) ProtoMessage() {}

func (x *PeerDisconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerDisconnectResponse.ProtoReflect.Descriptor instead.
func (*PeerDisconnectResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{8}
}

func (x *PeerDisconnectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ShareNodeListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareNodeListRequest) Reset() {
	*x = ShareNodeListRequest{}
	mi := &file_coordinator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareNodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareNodeListRequest) ProtoMessage() {}

func (x *ShareNodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareNodeListRequest.ProtoReflect.Descriptor instead.
func (*ShareNodeListRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{9}
}

func (x *ShareNodeListRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ShareNodeListRequest) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ShareNodeListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareNodeListResponse) Reset() {
	*x = ShareNodeListResponse{}
	mi := &file_coordinator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareNodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareNodeListResponse) ProtoMessage() {}

func (x *ShareNodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareNodeListResponse.ProtoReflect.Descriptor instead.
func (*ShareNodeListResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{10}
}

func (x *ShareNodeListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TotalCapacity int64                  `protobuf:"varint,4,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	UsedCapacity  int64                  `protobuf:"varint,5,opt,name=used_capacity,json=usedCapacity,proto3" json:"used_capacity,omitempty"`
	IsHealthy     bool                   `protobuf:"varint,6,opt,name=is_healthy,json=isHealthy,proto3" json:"is_healthy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_coordinator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{11}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetTotalCapacity() int64 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *NodeInfo) GetUsedCapacity() int64 {
	if x != nil {
		return x.UsedCapacity
	}
	return 0
}

func (x *NodeInfo) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeInfo      *NodeInfo              `protobuf:"bytes,3,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"` // Optional: for node heartbeats
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_coordinator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *HeartbeatRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HeartbeatRequest) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // Indicates if node is registered/recognized
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_coordinator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{13}
}

func (x *HeartbeatResponse) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *HeartbeatResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StoreFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreFileRequest) Reset() {
	*x = StoreFileRequest{}
	mi := &file_coordinator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFileRequest) ProtoMessage() {}

func (x *StoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFileRequest.ProtoReflect.Descriptor instead.
func (*StoreFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{14}
}

func (x *StoreFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *StoreFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StoreFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type StoreFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FileId        string                 `protobuf:"bytes,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Locations     []*ChunkLocation       `protobuf:"bytes,3,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreFileResponse) Reset() {
	*x = StoreFileResponse{}
	mi := &file_coordinator_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFileResponse) ProtoMessage() {}

func (x *StoreFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFileResponse.ProtoReflect.Descriptor instead.
func (*StoreFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{15}
}

func (x *StoreFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreFileResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *StoreFileResponse) GetLocations() []*ChunkLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

type RetrieveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveFileRequest) Reset() {
	*x = RetrieveFileRequest{}
	mi := &file_coordinator_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveFileRequest) ProtoMessage() {}

func (x *RetrieveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveFileRequest.ProtoReflect.Descriptor instead.
func (*RetrieveFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{16}
}

func (x *RetrieveFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type RetrieveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      *FileMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveFileResponse) Reset() {
	*x = RetrieveFileResponse{}
	mi := &file_coordinator_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveFileResponse) ProtoMessage() {}

func (x *RetrieveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveFileResponse.ProtoReflect.Descriptor instead.
func (*RetrieveFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{17}
}

func (x *RetrieveFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RetrieveFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RetrieveFileResponse) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Metadata      *FileMetadata          `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMetadataRequest) Reset() {
	*x = UpdateMetadataRequest{}
	mi := &file_coordinator_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadataRequest) ProtoMessage() {}

func (x *UpdateMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetadataRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateMetadataRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UpdateMetadataRequest) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMetadataResponse) Reset() {
	*x = UpdateMetadataResponse{}
	mi := &file_coordinator_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadataResponse) ProtoMessage() {}

func (x *UpdateMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateMetadataResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMetadataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Chunks        []*ChunkLocation       `protobuf:"bytes,4,rep,name=chunks,proto3" json:"chunks,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OwnerMemberId string                 `protobuf:"bytes,6,opt,name=owner_member_id,json=ownerMemberId,proto3" json:"owner_member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_coordinator_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{20}
}

func (x *FileMetadata) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetadata) GetChunks() []*ChunkLocation {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *FileMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FileMetadata) GetOwnerMemberId() string {
	if x != nil {
		return x.OwnerMemberId
	}
	return ""
}

type ChunkLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Index         int32                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkLocation) Reset() {
	*x = ChunkLocation{}
	mi := &file_coordinator_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkLocation) ProtoMessage() {}

func (x *ChunkLocation) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkLocation.ProtoReflect.Descriptor instead.
func (*ChunkLocation) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{21}
}

func (x *ChunkLocation) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkLocation) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ChunkLocation) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChunkLocation) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// SyncState messages for periodic state synchronization
type SyncStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberId      string                 `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`                             // All nodes this coordinator knows about
	KnownPeers    []*PeerInfo            `protobuf:"bytes,4,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"` // All peers this coordinator knows about
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncStateRequest) Reset() {
	*x = SyncStateRequest{}
	mi := &file_coordinator_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStateRequest) ProtoMessage() {}

func (x *SyncStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStateRequest.ProtoReflect.Descriptor instead.
func (*SyncStateRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{22}
}

func (x *SyncStateRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *SyncStateRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SyncStateRequest) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *SyncStateRequest) GetKnownPeers() []*PeerInfo {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

type SyncStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`                             // All nodes the responder knows about
	KnownPeers    []*PeerInfo            `protobuf:"bytes,3,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"` // All peers the responder knows about
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncStateResponse) Reset() {
	*x = SyncStateResponse{}
	mi := &file_coordinator_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStateResponse) ProtoMessage() {}

func (x *SyncStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStateResponse.ProtoReflect.Descriptor instead.
func (*SyncStateResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{23}
}

func (x *SyncStateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncStateResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *SyncStateResponse) GetKnownPeers() []*PeerInfo {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

// Directory operation messages
type CreateDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode          uint32                 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryRequest) Reset() {
	*x = CreateDirectoryRequest{}
	mi := &file_coordinator_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryRequest) ProtoMessage() {}

func (x *CreateDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{24}
}

func (x *CreateDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateDirectoryRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type CreateDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryResponse) Reset() {
	*x = CreateDirectoryResponse{}
	mi := &file_coordinator_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryResponse) ProtoMessage() {}

func (x *CreateDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{25}
}

func (x *CreateDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateDirectoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_coordinator_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{26}
}

func (x *ListDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Entries       []*DirectoryEntry      `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_coordinator_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{27}
}

func (x *ListDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDirectoryResponse) GetEntries() []*DirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type DeleteDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive     bool                   `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDirectoryRequest) Reset() {
	*x = DeleteDirectoryRequest{}
	mi := &file_coordinator_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirectoryRequest) ProtoMessage() {}

func (x *DeleteDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirectoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteDirectoryRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type DeleteDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDirectoryResponse) Reset() {
	*x = DeleteDirectoryResponse{}
	mi := &file_coordinator_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirectoryResponse) ProtoMessage() {}

func (x *DeleteDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirectoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteDirectoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatEntryRequest) Reset() {
	*x = StatEntryRequest{}
	mi := &file_coordinator_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatEntryRequest) ProtoMessage() {}

func (x *StatEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatEntryRequest.ProtoReflect.Descriptor instead.
func (*StatEntryRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{30}
}

func (x *StatEntryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type StatEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Entry         *DirectoryEntry        `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatEntryResponse) Reset() {
	*x = StatEntryResponse{}
	mi := &file_coordinator_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatEntryResponse) ProtoMessage() {}

func (x *StatEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatEntryResponse.ProtoReflect.Descriptor instead.
func (*StatEntryResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{31}
}

func (x *StatEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StatEntryResponse) GetEntry() *DirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type MoveEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldPath       string                 `protobuf:"bytes,1,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"`
	NewPath       string                 `protobuf:"bytes,2,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEntryRequest) Reset() {
	*x = MoveEntryRequest{}
	mi := &file_coordinator_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEntryRequest) ProtoMessage() {}

func (x *MoveEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEntryRequest.ProtoReflect.Descriptor instead.
func (*MoveEntryRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{32}
}

func (x *MoveEntryRequest) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *MoveEntryRequest) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type MoveEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveEntryResponse) Reset() {
	*x = MoveEntryResponse{}
	mi := &file_coordinator_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveEntryResponse) ProtoMessage() {}

func (x *MoveEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveEntryResponse.ProtoReflect.Descriptor instead.
func (*MoveEntryResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{33}
}

func (x *MoveEntryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MoveEntryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DirectoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	IsDirectory   bool                   `protobuf:"varint,3,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Mode          uint32                 `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	ModifiedTime  int64                  `protobuf:"varint,6,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	Owner         string                 `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectoryEntry) Reset() {
	*x = DirectoryEntry{}
	mi := &file_coordinator_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryEntry) ProtoMessage() {}

func (x *DirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryEntry.ProtoReflect.Descriptor instead.
func (*DirectoryEntry) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{34}
}

func (x *DirectoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectoryEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DirectoryEntry) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *DirectoryEntry) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DirectoryEntry) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *DirectoryEntry) GetModifiedTime() int64 {
	if x != nil {
		return x.ModifiedTime
	}
	return 0
}

func (x *DirectoryEntry) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// Path-based file operation messages
type CreateFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Mode          uint32                 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	mi := &file_coordinator_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{35}
}

func (x *CreateFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateFileRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type CreateFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	mi := &file_coordinator_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{36}
}

func (x *CreateFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        int64                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	mi := &file_coordinator_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{37}
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadFileRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadFileRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	BytesRead     int64                  `protobuf:"varint,3,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileResponse) Reset() {
	*x = ReadFileResponse{}
	mi := &file_coordinator_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileResponse) ProtoMessage() {}

func (x *ReadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileResponse.ProtoReflect.Descriptor instead.
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{38}
}

func (x *ReadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReadFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadFileResponse) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

type WriteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileRequest) Reset() {
	*x = WriteFileRequest{}
	mi := &file_coordinator_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileRequest) ProtoMessage() {}

func (x *WriteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileRequest.ProtoReflect.Descriptor instead.
func (*WriteFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{39}
}

func (x *WriteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WriteFileRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type WriteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	BytesWritten  int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileResponse) Reset() {
	*x = WriteFileResponse{}
	mi := &file_coordinator_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileResponse) ProtoMessage() {}

func (x *WriteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileResponse.ProtoReflect.Descriptor instead.
func (*WriteFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{40}
}

func (x *WriteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WriteFileResponse) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *WriteFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_coordinator_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_coordinator_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Streaming messages for large file operations
type WriteFileStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*WriteFileStreamRequest_Header
	//	*WriteFileStreamRequest_ChunkData
	Data          isWriteFileStreamRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileStreamRequest) Reset() {
	*x = WriteFileStreamRequest{}
	mi := &file_coordinator_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileStreamRequest) ProtoMessage() {}

func (x *WriteFileStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileStreamRequest.ProtoReflect.Descriptor instead.
func (*WriteFileStreamRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{43}
}

func (x *WriteFileStreamRequest) GetData() isWriteFileStreamRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WriteFileStreamRequest) GetHeader() *WriteFileStreamHeader {
	if x != nil {
		if x, ok := x.Data.(*WriteFileStreamRequest_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *WriteFileStreamRequest) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Data.(*WriteFileStreamRequest_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isWriteFileStreamRequest_Data interface {
	isWriteFileStreamRequest_Data()
}

type WriteFileStreamRequest_Header struct {
	Header *WriteFileStreamHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type WriteFileStreamRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*WriteFileStreamRequest_Header) isWriteFileStreamRequest_Data() {}

func (*WriteFileStreamRequest_ChunkData) isWriteFileStreamRequest_Data() {}

type WriteFileStreamHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileStreamHeader) Reset() {
	*x = WriteFileStreamHeader{}
	mi := &file_coordinator_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileStreamHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileStreamHeader) ProtoMessage() {}

func (x *WriteFileStreamHeader) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileStreamHeader.ProtoReflect.Descriptor instead.
func (*WriteFileStreamHeader) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{44}
}

func (x *WriteFileStreamHeader) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileStreamHeader) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type WriteFileStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	BytesWritten  int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ChunksCreated int32                  `protobuf:"varint,4,opt,name=chunks_created,json=chunksCreated,proto3" json:"chunks_created,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileStreamResponse) Reset() {
	*x = WriteFileStreamResponse{}
	mi := &file_coordinator_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileStreamResponse) ProtoMessage() {}

func (x *WriteFileStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileStreamResponse.ProtoReflect.Descriptor instead.
func (*WriteFileStreamResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{45}
}

func (x *WriteFileStreamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WriteFileStreamResponse) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *WriteFileStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WriteFileStreamResponse) GetChunksCreated() int32 {
	if x != nil {
		return x.ChunksCreated
	}
	return 0
}

type ReadFileStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        int64                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileStreamRequest) Reset() {
	*x = ReadFileStreamRequest{}
	mi := &file_coordinator_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileStreamRequest) ProtoMessage() {}

func (x *ReadFileStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileStreamRequest.ProtoReflect.Descriptor instead.
func (*ReadFileStreamRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{46}
}

func (x *ReadFileStreamRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadFileStreamRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadFileStreamRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadFileStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*ReadFileStreamResponse_Header
	//	*ReadFileStreamResponse_ChunkData
	Data          isReadFileStreamResponse_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileStreamResponse) Reset() {
	*x = ReadFileStreamResponse{}
	mi := &file_coordinator_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileStreamResponse) ProtoMessage() {}

func (x *ReadFileStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileStreamResponse.ProtoReflect.Descriptor instead.
func (*ReadFileStreamResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{47}
}

func (x *ReadFileStreamResponse) GetData() isReadFileStreamResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadFileStreamResponse) GetHeader() *ReadFileStreamHeader {
	if x != nil {
		if x, ok := x.Data.(*ReadFileStreamResponse_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *ReadFileStreamResponse) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Data.(*ReadFileStreamResponse_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isReadFileStreamResponse_Data interface {
	isReadFileStreamResponse_Data()
}

type ReadFileStreamResponse_Header struct {
	Header *ReadFileStreamHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type ReadFileStreamResponse_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*ReadFileStreamResponse_Header) isReadFileStreamResponse_Data() {}

func (*ReadFileStreamResponse_ChunkData) isReadFileStreamResponse_Data() {}

type ReadFileStreamHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalSize     int64                  `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	ChunkCount    int32                  `protobuf:"varint,2,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileStreamHeader) Reset() {
	*x = ReadFileStreamHeader{}
	mi := &file_coordinator_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileStreamHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileStreamHeader) ProtoMessage() {}

func (x *ReadFileStreamHeader) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileStreamHeader.ProtoReflect.Descriptor instead.
func (*ReadFileStreamHeader) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{48}
}

func (x *ReadFileStreamHeader) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ReadFileStreamHeader) GetChunkCount() int32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

// Federation certificate management messages
type GetFederationCARequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFederationCARequest) Reset() {
	*x = GetFederationCARequest{}
	mi := &file_coordinator_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFederationCARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFederationCARequest) ProtoMessage() {}

func (x *GetFederationCARequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFederationCARequest.ProtoReflect.Descriptor instead.
func (*GetFederationCARequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{49}
}

type GetFederationCAResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	CaCertificate    string                 `protobuf:"bytes,2,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"` // PEM-encoded CA certificate
	FederationDomain string                 `protobuf:"bytes,3,opt,name=federation_domain,json=federationDomain,proto3" json:"federation_domain,omitempty"`
	Message          string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetFederationCAResponse) Reset() {
	*x = GetFederationCAResponse{}
	mi := &file_coordinator_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFederationCAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFederationCAResponse) ProtoMessage() {}

func (x *GetFederationCAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFederationCAResponse.ProtoReflect.Descriptor instead.
func (*GetFederationCAResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{50}
}

func (x *GetFederationCAResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetFederationCAResponse) GetCaCertificate() string {
	if x != nil {
		return x.CaCertificate
	}
	return ""
}

func (x *GetFederationCAResponse) GetFederationDomain() string {
	if x != nil {
		return x.FederationDomain
	}
	return ""
}

func (x *GetFederationCAResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RequestClientCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Csr           string                 `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`                                 // PEM-encoded certificate signing request
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`       // Client identity (e.g., user@domain.collective.local)
	InviteCode    string                 `protobuf:"bytes,3,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"` // Invitation code for validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestClientCertificateRequest) Reset() {
	*x = RequestClientCertificateRequest{}
	mi := &file_coordinator_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestClientCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientCertificateRequest) ProtoMessage() {}

func (x *RequestClientCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientCertificateRequest.ProtoReflect.Descriptor instead.
func (*RequestClientCertificateRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{51}
}

func (x *RequestClientCertificateRequest) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *RequestClientCertificateRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RequestClientCertificateRequest) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type RequestClientCertificateResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ClientCertificate string                 `protobuf:"bytes,2,opt,name=client_certificate,json=clientCertificate,proto3" json:"client_certificate,omitempty"` // PEM-encoded client certificate
	CaCertificate     string                 `protobuf:"bytes,3,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`             // PEM-encoded CA certificate for verification
	Message           string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	CollectiveName    string                 `protobuf:"bytes,5,opt,name=collective_name,json=collectiveName,proto3" json:"collective_name,omitempty"` // Name of the collective the client is joining
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RequestClientCertificateResponse) Reset() {
	*x = RequestClientCertificateResponse{}
	mi := &file_coordinator_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestClientCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientCertificateResponse) ProtoMessage() {}

func (x *RequestClientCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientCertificateResponse.ProtoReflect.Descriptor instead.
func (*RequestClientCertificateResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{52}
}

func (x *RequestClientCertificateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RequestClientCertificateResponse) GetClientCertificate() string {
	if x != nil {
		return x.ClientCertificate
	}
	return ""
}

func (x *RequestClientCertificateResponse) GetCaCertificate() string {
	if x != nil {
		return x.CaCertificate
	}
	return ""
}

func (x *RequestClientCertificateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RequestClientCertificateResponse) GetCollectiveName() string {
	if x != nil {
		return x.CollectiveName
	}
	return ""
}

type GenerateInviteRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Grants          []*DataStoreGrant      `protobuf:"bytes,1,rep,name=grants,proto3" json:"grants,omitempty"`
	MaxUses         int32                  `protobuf:"varint,2,opt,name=max_uses,json=maxUses,proto3" json:"max_uses,omitempty"`
	ValiditySeconds int64                  `protobuf:"varint,3,opt,name=validity_seconds,json=validitySeconds,proto3" json:"validity_seconds,omitempty"`
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateInviteRequest) Reset() {
	*x = GenerateInviteRequest{}
	mi := &file_coordinator_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInviteRequest) ProtoMessage() {}

func (x *GenerateInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInviteRequest.ProtoReflect.Descriptor instead.
func (*GenerateInviteRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{53}
}

func (x *GenerateInviteRequest) GetGrants() []*DataStoreGrant {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *GenerateInviteRequest) GetMaxUses() int32 {
	if x != nil {
		return x.MaxUses
	}
	return 0
}

func (x *GenerateInviteRequest) GetValiditySeconds() int64 {
	if x != nil {
		return x.ValiditySeconds
	}
	return 0
}

func (x *GenerateInviteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DataStoreGrant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Rights        []string               `protobuf:"bytes,2,rep,name=rights,proto3" json:"rights,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStoreGrant) Reset() {
	*x = DataStoreGrant{}
	mi := &file_coordinator_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStoreGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreGrant) ProtoMessage() {}

func (x *DataStoreGrant) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreGrant.ProtoReflect.Descriptor instead.
func (*DataStoreGrant) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{54}
}

func (x *DataStoreGrant) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataStoreGrant) GetRights() []string {
	if x != nil {
		return x.Rights
	}
	return nil
}

type GenerateInviteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ShareUrl      string                 `protobuf:"bytes,5,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateInviteResponse) Reset() {
	*x = GenerateInviteResponse{}
	mi := &file_coordinator_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateInviteResponse) ProtoMessage() {}

func (x *GenerateInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateInviteResponse.ProtoReflect.Descriptor instead.
func (*GenerateInviteResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{55}
}

func (x *GenerateInviteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateInviteResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GenerateInviteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenerateInviteResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *GenerateInviteResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

var File_coordinator_proto protoreflect.FileDescriptor

const file_coordinator_proto_rawDesc = "" +
	"\n" +
	"\x11coordinator.proto\x12\x10collective.proto\"\x12\n" +
	"\x10GetStatusRequest\"\xe9\x02\n" +
	"\x11GetStatusResponse\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12;\n" +
	"\vlocal_nodes\x18\x02 \x03(\v2\x1a.collective.proto.NodeInfoR\n" +
	"localNodes\x120\n" +
	"\x05peers\x18\x03 \x03(\v2\x1a.collective.proto.PeerInfoR\x05peers\x12\x1f\n" +
	"\vtotal_files\x18\x04 \x01(\x05R\n" +
	"totalFiles\x124\n" +
	"\x16total_storage_capacity\x18\x05 \x01(\x03R\x14totalStorageCapacity\x122\n" +
	"\x15used_storage_capacity\x18\x06 \x01(\x03R\x13usedStorageCapacity\x12=\n" +
	"\fremote_nodes\x18\a \x03(\v2\x1a.collective.proto.NodeInfoR\vremoteNodes\"}\n" +
	"\bPeerInfo\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"is_healthy\x18\x03 \x01(\bR\tisHealthy\x12\x1b\n" +
	"\tlast_seen\x18\x04 \x01(\x03R\blastSeen\"\x8c\x01\n" +
	"\x13RegisterNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12%\n" +
	"\x0etotal_capacity\x18\x04 \x01(\x03R\rtotalCapacity\"J\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"}\n" +
	"\x12PeerConnectRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x120\n" +
	"\x05nodes\x18\x03 \x03(\v2\x1a.collective.proto.NodeInfoR\x05nodes\"\x80\x01\n" +
	"\x13PeerConnectResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x120\n" +
	"\x05nodes\x18\x03 \x03(\v2\x1a.collective.proto.NodeInfoR\x05nodes\"4\n" +
	"\x15PeerDisconnectRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\"2\n" +
	"\x16PeerDisconnectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"e\n" +
	"\x14ShareNodeListRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x120\n" +
	"\x05nodes\x18\x02 \x03(\v2\x1a.collective.proto.NodeInfoR\x05nodes\"1\n" +
	"\x15ShareNodeListResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xc5\x01\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12%\n" +
	"\x0etotal_capacity\x18\x04 \x01(\x03R\rtotalCapacity\x12#\n" +
	"\rused_capacity\x18\x05 \x01(\x03R\fusedCapacity\x12\x1d\n" +
	"\n" +
	"is_healthy\x18\x06 \x01(\bR\tisHealthy\"\x86\x01\n" +
	"\x10HeartbeatRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x127\n" +
	"\tnode_info\x18\x03 \x01(\v2\x1a.collective.proto.NodeInfoR\bnodeInfo\"h\n" +
	"\x11HeartbeatResponse\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"[\n" +
	"\x10StoreFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\"\x85\x01\n" +
	"\x11StoreFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12=\n" +
	"\tlocations\x18\x03 \x03(\v2\x1f.collective.proto.ChunkLocationR\tlocations\".\n" +
	"\x13RetrieveFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"\x80\x01\n" +
	"\x14RetrieveFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12:\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1e.collective.proto.FileMetadataR\bmetadata\"l\n" +
	"\x15UpdateMetadataRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12:\n" +
	"\bmetadata\x18\x02 \x01(\v2\x1e.collective.proto.FileMetadataR\bmetadata\"2\n" +
	"\x16UpdateMetadataResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xd7\x01\n" +
	"\fFileMetadata\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x127\n" +
	"\x06chunks\x18\x04 \x03(\v2\x1f.collective.proto.ChunkLocationR\x06chunks\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12&\n" +
	"\x0fowner_member_id\x18\x06 \x01(\tR\rownerMemberId\"m\n" +
	"\rChunkLocation\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x05R\x05index\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"\xbc\x01\n" +
	"\x10SyncStateRequest\x12\x1b\n" +
	"\tmember_id\x18\x01 \x01(\tR\bmemberId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x120\n" +
	"\x05nodes\x18\x03 \x03(\v2\x1a.collective.proto.NodeInfoR\x05nodes\x12;\n" +
	"\vknown_peers\x18\x04 \x03(\v2\x1a.collective.proto.PeerInfoR\n" +
	"knownPeers\"\x9c\x01\n" +
	"\x11SyncStateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x120\n" +
	"\x05nodes\x18\x02 \x03(\v2\x1a.collective.proto.NodeInfoR\x05nodes\x12;\n" +
	"\vknown_peers\x18\x03 \x03(\v2\x1a.collective.proto.PeerInfoR\n" +
	"knownPeers\"@\n" +
	"\x16CreateDirectoryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\rR\x04mode\"M\n" +
	"\x17CreateDirectoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"*\n" +
	"\x14ListDirectoryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"m\n" +
	"\x15ListDirectoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12:\n" +
	"\aentries\x18\x02 \x03(\v2 .collective.proto.DirectoryEntryR\aentries\"J\n" +
	"\x16DeleteDirectoryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1c\n" +
	"\trecursive\x18\x02 \x01(\bR\trecursive\"M\n" +
	"\x17DeleteDirectoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"&\n" +
	"\x10StatEntryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"e\n" +
	"\x11StatEntryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x126\n" +
	"\x05entry\x18\x02 \x01(\v2 .collective.proto.DirectoryEntryR\x05entry\"H\n" +
	"\x10MoveEntryRequest\x12\x19\n" +
	"\bold_path\x18\x01 \x01(\tR\aoldPath\x12\x19\n" +
	"\bnew_path\x18\x02 \x01(\tR\anewPath\"G\n" +
	"\x11MoveEntryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xbe\x01\n" +
	"\x0eDirectoryEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fis_directory\x18\x03 \x01(\bR\visDirectory\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\rR\x04mode\x12#\n" +
	"\rmodified_time\x18\x06 \x01(\x03R\fmodifiedTime\x12\x14\n" +
	"\x05owner\x18\a \x01(\tR\x05owner\";\n" +
	"\x11CreateFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\rR\x04mode\"H\n" +
	"\x12CreateFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"U\n" +
	"\x0fReadFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x03R\x06length\"_\n" +
	"\x10ReadFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\x03 \x01(\x03R\tbytesRead\"R\n" +
	"\x10WriteFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\"l\n" +
	"\x11WriteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"'\n" +
	"\x11DeleteFileRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"H\n" +
	"\x12DeleteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x84\x01\n" +
	"\x16WriteFileStreamRequest\x12A\n" +
	"\x06header\x18\x01 \x01(\v2'.collective.proto.WriteFileStreamHeaderH\x00R\x06header\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\x06\n" +
	"\x04data\"J\n" +
	"\x15WriteFileStreamHeader\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\"\x99\x01\n" +
	"\x17WriteFileStreamResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12%\n" +
	"\x0echunks_created\x18\x04 \x01(\x05R\rchunksCreated\"[\n" +
	"\x15ReadFileStreamRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x03R\x06length\"\x83\x01\n" +
	"\x16ReadFileStreamResponse\x12@\n" +
	"\x06header\x18\x01 \x01(\v2&.collective.proto.ReadFileStreamHeaderH\x00R\x06header\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\x06\n" +
	"\x04data\"V\n" +
	"\x14ReadFileStreamHeader\x12\x1d\n" +
	"\n" +
	"total_size\x18\x01 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\vchunk_count\x18\x02 \x01(\x05R\n" +
	"chunkCount\"\x18\n" +
	"\x16GetFederationCARequest\"\xa1\x01\n" +
	"\x17GetFederationCAResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0eca_certificate\x18\x02 \x01(\tR\rcaCertificate\x12+\n" +
	"\x11federation_domain\x18\x03 \x01(\tR\x10federationDomain\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"q\n" +
	"\x1fRequestClientCertificateRequest\x12\x10\n" +
	"\x03csr\x18\x01 \x01(\tR\x03csr\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x1f\n" +
	"\vinvite_code\x18\x03 \x01(\tR\n" +
	"inviteCode\"\xd5\x01\n" +
	" RequestClientCertificateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12-\n" +
	"\x12client_certificate\x18\x02 \x01(\tR\x11clientCertificate\x12%\n" +
	"\x0eca_certificate\x18\x03 \x01(\tR\rcaCertificate\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12'\n" +
	"\x0fcollective_name\x18\x05 \x01(\tR\x0ecollectiveName\"\xb9\x01\n" +
	"\x15GenerateInviteRequest\x128\n" +
	"\x06grants\x18\x01 \x03(\v2 .collective.proto.DataStoreGrantR\x06grants\x12\x19\n" +
	"\bmax_uses\x18\x02 \x01(\x05R\amaxUses\x12)\n" +
	"\x10validity_seconds\x18\x03 \x01(\x03R\x0fvaliditySeconds\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"<\n" +
	"\x0eDataStoreGrant\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06rights\x18\x02 \x03(\tR\x06rights\"\x9c\x01\n" +
	"\x16GenerateInviteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\x12\x1b\n" +
	"\tshare_url\x18\x05 \x01(\tR\bshareUrl2\x86\x12\n" +
	"\vCoordinator\x12Z\n" +
	"\vPeerConnect\x12$.collective.proto.PeerConnectRequest\x1a%.collective.proto.PeerConnectResponse\x12c\n" +
	"\x0ePeerDisconnect\x12'.collective.proto.PeerDisconnectRequest\x1a(.collective.proto.PeerDisconnectResponse\x12`\n" +
	"\rShareNodeList\x12&.collective.proto.ShareNodeListRequest\x1a'.collective.proto.ShareNodeListResponse\x12T\n" +
	"\tHeartbeat\x12\".collective.proto.HeartbeatRequest\x1a#.collective.proto.HeartbeatResponse\x12T\n" +
	"\tStoreFile\x12\".collective.proto.StoreFileRequest\x1a#.collective.proto.StoreFileResponse\x12]\n" +
	"\fRetrieveFile\x12%.collective.proto.RetrieveFileRequest\x1a&.collective.proto.RetrieveFileResponse\x12c\n" +
	"\x0eUpdateMetadata\x12'.collective.proto.UpdateMetadataRequest\x1a(.collective.proto.UpdateMetadataResponse\x12]\n" +
	"\fRegisterNode\x12%.collective.proto.RegisterNodeRequest\x1a&.collective.proto.RegisterNodeResponse\x12T\n" +
	"\tGetStatus\x12\".collective.proto.GetStatusRequest\x1a#.collective.proto.GetStatusResponse\x12T\n" +
	"\tSyncState\x12\".collective.proto.SyncStateRequest\x1a#.collective.proto.SyncStateResponse\x12f\n" +
	"\x0fCreateDirectory\x12(.collective.proto.CreateDirectoryRequest\x1a).collective.proto.CreateDirectoryResponse\x12`\n" +
	"\rListDirectory\x12&.collective.proto.ListDirectoryRequest\x1a'.collective.proto.ListDirectoryResponse\x12f\n" +
	"\x0fDeleteDirectory\x12(.collective.proto.DeleteDirectoryRequest\x1a).collective.proto.DeleteDirectoryResponse\x12T\n" +
	"\tStatEntry\x12\".collective.proto.StatEntryRequest\x1a#.collective.proto.StatEntryResponse\x12T\n" +
	"\tMoveEntry\x12\".collective.proto.MoveEntryRequest\x1a#.collective.proto.MoveEntryResponse\x12W\n" +
	"\n" +
	"CreateFile\x12#.collective.proto.CreateFileRequest\x1a$.collective.proto.CreateFileResponse\x12Q\n" +
	"\bReadFile\x12!.collective.proto.ReadFileRequest\x1a\".collective.proto.ReadFileResponse\x12T\n" +
	"\tWriteFile\x12\".collective.proto.WriteFileRequest\x1a#.collective.proto.WriteFileResponse\x12W\n" +
	"\n" +
	"DeleteFile\x12#.collective.proto.DeleteFileRequest\x1a$.collective.proto.DeleteFileResponse\x12h\n" +
	"\x0fWriteFileStream\x12(.collective.proto.WriteFileStreamRequest\x1a).collective.proto.WriteFileStreamResponse(\x01\x12e\n" +
	"\x0eReadFileStream\x12'.collective.proto.ReadFileStreamRequest\x1a(.collective.proto.ReadFileStreamResponse0\x01\x12f\n" +
	"\x0fGetFederationCA\x12(.collective.proto.GetFederationCARequest\x1a).collective.proto.GetFederationCAResponse\x12\x81\x01\n" +
	"\x18RequestClientCertificate\x121.collective.proto.RequestClientCertificateRequest\x1a2.collective.proto.RequestClientCertificateResponse\x12c\n" +
	"\x0eGenerateInvite\x12'.collective.proto.GenerateInviteRequest\x1a(.collective.proto.GenerateInviteResponseB\x19Z\x17collective/pkg/protocolb\x06proto3"

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData []byte
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)))
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_coordinator_proto_goTypes = []any{
	(*GetStatusRequest)(nil),                 // 0: collective.proto.GetStatusRequest
	(*GetStatusResponse)(nil),                // 1: collective.proto.GetStatusResponse
	(*PeerInfo)(nil),                         // 2: collective.proto.PeerInfo
	(*RegisterNodeRequest)(nil),              // 3: collective.proto.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),             // 4: collective.proto.RegisterNodeResponse
	(*PeerConnectRequest)(nil),               // 5: collective.proto.PeerConnectRequest
	(*PeerConnectResponse)(nil),              // 6: collective.proto.PeerConnectResponse
	(*PeerDisconnectRequest)(nil),            // 7: collective.proto.PeerDisconnectRequest
	(*PeerDisconnectResponse)(nil),           // 8: collective.proto.PeerDisconnectResponse
	(*ShareNodeListRequest)(nil),             // 9: collective.proto.ShareNodeListRequest
	(*ShareNodeListResponse)(nil),            // 10: collective.proto.ShareNodeListResponse
	(*NodeInfo)(nil),                         // 11: collective.proto.NodeInfo
	(*HeartbeatRequest)(nil),                 // 12: collective.proto.HeartbeatRequest
	(*HeartbeatResponse)(nil),                // 13: collective.proto.HeartbeatResponse
	(*StoreFileRequest)(nil),                 // 14: collective.proto.StoreFileRequest
	(*StoreFileResponse)(nil),                // 15: collective.proto.StoreFileResponse
	(*RetrieveFileRequest)(nil),              // 16: collective.proto.RetrieveFileRequest
	(*RetrieveFileResponse)(nil),             // 17: collective.proto.RetrieveFileResponse
	(*UpdateMetadataRequest)(nil),            // 18: collective.proto.UpdateMetadataRequest
	(*UpdateMetadataResponse)(nil),           // 19: collective.proto.UpdateMetadataResponse
	(*FileMetadata)(nil),                     // 20: collective.proto.FileMetadata
	(*ChunkLocation)(nil),                    // 21: collective.proto.ChunkLocation
	(*SyncStateRequest)(nil),                 // 22: collective.proto.SyncStateRequest
	(*SyncStateResponse)(nil),                // 23: collective.proto.SyncStateResponse
	(*CreateDirectoryRequest)(nil),           // 24: collective.proto.CreateDirectoryRequest
	(*CreateDirectoryResponse)(nil),          // 25: collective.proto.CreateDirectoryResponse
	(*ListDirectoryRequest)(nil),             // 26: collective.proto.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),            // 27: collective.proto.ListDirectoryResponse
	(*DeleteDirectoryRequest)(nil),           // 28: collective.proto.DeleteDirectoryRequest
	(*DeleteDirectoryResponse)(nil),          // 29: collective.proto.DeleteDirectoryResponse
	(*StatEntryRequest)(nil),                 // 30: collective.proto.StatEntryRequest
	(*StatEntryResponse)(nil),                // 31: collective.proto.StatEntryResponse
	(*MoveEntryRequest)(nil),                 // 32: collective.proto.MoveEntryRequest
	(*MoveEntryResponse)(nil),                // 33: collective.proto.MoveEntryResponse
	(*DirectoryEntry)(nil),                   // 34: collective.proto.DirectoryEntry
	(*CreateFileRequest)(nil),                // 35: collective.proto.CreateFileRequest
	(*CreateFileResponse)(nil),               // 36: collective.proto.CreateFileResponse
	(*ReadFileRequest)(nil),                  // 37: collective.proto.ReadFileRequest
	(*ReadFileResponse)(nil),                 // 38: collective.proto.ReadFileResponse
	(*WriteFileRequest)(nil),                 // 39: collective.proto.WriteFileRequest
	(*WriteFileResponse)(nil),                // 40: collective.proto.WriteFileResponse
	(*DeleteFileRequest)(nil),                // 41: collective.proto.DeleteFileRequest
	(*DeleteFileResponse)(nil),               // 42: collective.proto.DeleteFileResponse
	(*WriteFileStreamRequest)(nil),           // 43: collective.proto.WriteFileStreamRequest
	(*WriteFileStreamHeader)(nil),            // 44: collective.proto.WriteFileStreamHeader
	(*WriteFileStreamResponse)(nil),          // 45: collective.proto.WriteFileStreamResponse
	(*ReadFileStreamRequest)(nil),            // 46: collective.proto.ReadFileStreamRequest
	(*ReadFileStreamResponse)(nil),           // 47: collective.proto.ReadFileStreamResponse
	(*ReadFileStreamHeader)(nil),             // 48: collective.proto.ReadFileStreamHeader
	(*GetFederationCARequest)(nil),           // 49: collective.proto.GetFederationCARequest
	(*GetFederationCAResponse)(nil),          // 50: collective.proto.GetFederationCAResponse
	(*RequestClientCertificateRequest)(nil),  // 51: collective.proto.RequestClientCertificateRequest
	(*RequestClientCertificateResponse)(nil), // 52: collective.proto.RequestClientCertificateResponse
	(*GenerateInviteRequest)(nil),            // 53: collective.proto.GenerateInviteRequest
	(*DataStoreGrant)(nil),                   // 54: collective.proto.DataStoreGrant
	(*GenerateInviteResponse)(nil),           // 55: collective.proto.GenerateInviteResponse
}
var file_coordinator_proto_depIdxs = []int32{
	11, // 0: collective.proto.GetStatusResponse.local_nodes:type_name -> collective.proto.NodeInfo
	2,  // 1: collective.proto.GetStatusResponse.peers:type_name -> collective.proto.PeerInfo
	11, // 2: collective.proto.GetStatusResponse.remote_nodes:type_name -> collective.proto.NodeInfo
	11, // 3: collective.proto.PeerConnectRequest.nodes:type_name -> collective.proto.NodeInfo
	11, // 4: collective.proto.PeerConnectResponse.nodes:type_name -> collective.proto.NodeInfo
	11, // 5: collective.proto.ShareNodeListRequest.nodes:type_name -> collective.proto.NodeInfo
	11, // 6: collective.proto.HeartbeatRequest.node_info:type_name -> collective.proto.NodeInfo
	21, // 7: collective.proto.StoreFileResponse.locations:type_name -> collective.proto.ChunkLocation
	20, // 8: collective.proto.RetrieveFileResponse.metadata:type_name -> collective.proto.FileMetadata
	20, // 9: collective.proto.UpdateMetadataRequest.metadata:type_name -> collective.proto.FileMetadata
	21, // 10: collective.proto.FileMetadata.chunks:type_name -> collective.proto.ChunkLocation
	11, // 11: collective.proto.SyncStateRequest.nodes:type_name -> collective.proto.NodeInfo
	2,  // 12: collective.proto.SyncStateRequest.known_peers:type_name -> collective.proto.PeerInfo
	11, // 13: collective.proto.SyncStateResponse.nodes:type_name -> collective.proto.NodeInfo
	2,  // 14: collective.proto.SyncStateResponse.known_peers:type_name -> collective.proto.PeerInfo
	34, // 15: collective.proto.ListDirectoryResponse.entries:type_name -> collective.proto.DirectoryEntry
	34, // 16: collective.proto.StatEntryResponse.entry:type_name -> collective.proto.DirectoryEntry
	44, // 17: collective.proto.WriteFileStreamRequest.header:type_name -> collective.proto.WriteFileStreamHeader
	48, // 18: collective.proto.ReadFileStreamResponse.header:type_name -> collective.proto.ReadFileStreamHeader
	54, // 19: collective.proto.GenerateInviteRequest.grants:type_name -> collective.proto.DataStoreGrant
	5,  // 20: collective.proto.Coordinator.PeerConnect:input_type -> collective.proto.PeerConnectRequest
	7,  // 21: collective.proto.Coordinator.PeerDisconnect:input_type -> collective.proto.PeerDisconnectRequest
	9,  // 22: collective.proto.Coordinator.ShareNodeList:input_type -> collective.proto.ShareNodeListRequest
	12, // 23: collective.proto.Coordinator.Heartbeat:input_type -> collective.proto.HeartbeatRequest
	14, // 24: collective.proto.Coordinator.StoreFile:input_type -> collective.proto.StoreFileRequest
	16, // 25: collective.proto.Coordinator.RetrieveFile:input_type -> collective.proto.RetrieveFileRequest
	18, // 26: collective.proto.Coordinator.UpdateMetadata:input_type -> collective.proto.UpdateMetadataRequest
	3,  // 27: collective.proto.Coordinator.RegisterNode:input_type -> collective.proto.RegisterNodeRequest
	0,  // 28: collective.proto.Coordinator.GetStatus:input_type -> collective.proto.GetStatusRequest
	22, // 29: collective.proto.Coordinator.SyncState:input_type -> collective.proto.SyncStateRequest
	24, // 30: collective.proto.Coordinator.CreateDirectory:input_type -> collective.proto.CreateDirectoryRequest
	26, // 31: collective.proto.Coordinator.ListDirectory:input_type -> collective.proto.ListDirectoryRequest
	28, // 32: collective.proto.Coordinator.DeleteDirectory:input_type -> collective.proto.DeleteDirectoryRequest
	30, // 33: collective.proto.Coordinator.StatEntry:input_type -> collective.proto.StatEntryRequest
	32, // 34: collective.proto.Coordinator.MoveEntry:input_type -> collective.proto.MoveEntryRequest
	35, // 35: collective.proto.Coordinator.CreateFile:input_type -> collective.proto.CreateFileRequest
	37, // 36: collective.proto.Coordinator.ReadFile:input_type -> collective.proto.ReadFileRequest
	39, // 37: collective.proto.Coordinator.WriteFile:input_type -> collective.proto.WriteFileRequest
	41, // 38: collective.proto.Coordinator.DeleteFile:input_type -> collective.proto.DeleteFileRequest
	43, // 39: collective.proto.Coordinator.WriteFileStream:input_type -> collective.proto.WriteFileStreamRequest
	46, // 40: collective.proto.Coordinator.ReadFileStream:input_type -> collective.proto.ReadFileStreamRequest
	49, // 41: collective.proto.Coordinator.GetFederationCA:input_type -> collective.proto.GetFederationCARequest
	51, // 42: collective.proto.Coordinator.RequestClientCertificate:input_type -> collective.proto.RequestClientCertificateRequest
	53, // 43: collective.proto.Coordinator.GenerateInvite:input_type -> collective.proto.GenerateInviteRequest
	6,  // 44: collective.proto.Coordinator.PeerConnect:output_type -> collective.proto.PeerConnectResponse
	8,  // 45: collective.proto.Coordinator.PeerDisconnect:output_type -> collective.proto.PeerDisconnectResponse
	10, // 46: collective.proto.Coordinator.ShareNodeList:output_type -> collective.proto.ShareNodeListResponse
	13, // 47: collective.proto.Coordinator.Heartbeat:output_type -> collective.proto.HeartbeatResponse
	15, // 48: collective.proto.Coordinator.StoreFile:output_type -> collective.proto.StoreFileResponse
	17, // 49: collective.proto.Coordinator.RetrieveFile:output_type -> collective.proto.RetrieveFileResponse
	19, // 50: collective.proto.Coordinator.UpdateMetadata:output_type -> collective.proto.UpdateMetadataResponse
	4,  // 51: collective.proto.Coordinator.RegisterNode:output_type -> collective.proto.RegisterNodeResponse
	1,  // 52: collective.proto.Coordinator.GetStatus:output_type -> collective.proto.GetStatusResponse
	23, // 53: collective.proto.Coordinator.SyncState:output_type -> collective.proto.SyncStateResponse
	25, // 54: collective.proto.Coordinator.CreateDirectory:output_type -> collective.proto.CreateDirectoryResponse
	27, // 55: collective.proto.Coordinator.ListDirectory:output_type -> collective.proto.ListDirectoryResponse
	29, // 56: collective.proto.Coordinator.DeleteDirectory:output_type -> collective.proto.DeleteDirectoryResponse
	31, // 57: collective.proto.Coordinator.StatEntry:output_type -> collective.proto.StatEntryResponse
	33, // 58: collective.proto.Coordinator.MoveEntry:output_type -> collective.proto.MoveEntryResponse
	36, // 59: collective.proto.Coordinator.CreateFile:output_type -> collective.proto.CreateFileResponse
	38, // 60: collective.proto.Coordinator.ReadFile:output_type -> collective.proto.ReadFileResponse
	40, // 61: collective.proto.Coordinator.WriteFile:output_type -> collective.proto.WriteFileResponse
	42, // 62: collective.proto.Coordinator.DeleteFile:output_type -> collective.proto.DeleteFileResponse
	45, // 63: collective.proto.Coordinator.WriteFileStream:output_type -> collective.proto.WriteFileStreamResponse
	47, // 64: collective.proto.Coordinator.ReadFileStream:output_type -> collective.proto.ReadFileStreamResponse
	50, // 65: collective.proto.Coordinator.GetFederationCA:output_type -> collective.proto.GetFederationCAResponse
	52, // 66: collective.proto.Coordinator.RequestClientCertificate:output_type -> collective.proto.RequestClientCertificateResponse
	55, // 67: collective.proto.Coordinator.GenerateInvite:output_type -> collective.proto.GenerateInviteResponse
	44, // [44:68] is the sub-list for method output_type
	20, // [20:44] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	file_coordinator_proto_msgTypes[43].OneofWrappers = []any{
		(*WriteFileStreamRequest_Header)(nil),
		(*WriteFileStreamRequest_ChunkData)(nil),
	}
	file_coordinator_proto_msgTypes[47].OneofWrappers = []any{
		(*ReadFileStreamResponse_Header)(nil),
		(*ReadFileStreamResponse_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
