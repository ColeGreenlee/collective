// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: proto/gossip.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GossipMessage types
type GossipType int32

const (
	GossipType_GOSSIP_UNKNOWN   GossipType = 0
	GossipType_GOSSIP_JOIN      GossipType = 1 // New member joining federation
	GossipType_GOSSIP_LEAVE     GossipType = 2 // Member leaving federation
	GossipType_GOSSIP_UPDATE    GossipType = 3 // State update (endpoints, datastores)
	GossipType_GOSSIP_HEARTBEAT GossipType = 4 // Periodic heartbeat
	GossipType_GOSSIP_SYNC      GossipType = 5 // Anti-entropy sync request
)

// Enum value maps for GossipType.
var (
	GossipType_name = map[int32]string{
		0: "GOSSIP_UNKNOWN",
		1: "GOSSIP_JOIN",
		2: "GOSSIP_LEAVE",
		3: "GOSSIP_UPDATE",
		4: "GOSSIP_HEARTBEAT",
		5: "GOSSIP_SYNC",
	}
	GossipType_value = map[string]int32{
		"GOSSIP_UNKNOWN":   0,
		"GOSSIP_JOIN":      1,
		"GOSSIP_LEAVE":     2,
		"GOSSIP_UPDATE":    3,
		"GOSSIP_HEARTBEAT": 4,
		"GOSSIP_SYNC":      5,
	}
)

func (x GossipType) Enum() *GossipType {
	p := new(GossipType)
	*p = x
	return p
}

func (x GossipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GossipType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gossip_proto_enumTypes[0].Descriptor()
}

func (GossipType) Type() protoreflect.EnumType {
	return &file_proto_gossip_proto_enumTypes[0]
}

func (x GossipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GossipType.Descriptor instead.
func (GossipType) EnumDescriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{0}
}

type PlacementStrategy int32

const (
	PlacementStrategy_PLACEMENT_UNKNOWN PlacementStrategy = 0
	PlacementStrategy_PLACEMENT_MEDIA   PlacementStrategy = 1 // Optimize for streaming
	PlacementStrategy_PLACEMENT_BACKUP  PlacementStrategy = 2 // Optimize for durability
	PlacementStrategy_PLACEMENT_HYBRID  PlacementStrategy = 3 // Balance both
)

// Enum value maps for PlacementStrategy.
var (
	PlacementStrategy_name = map[int32]string{
		0: "PLACEMENT_UNKNOWN",
		1: "PLACEMENT_MEDIA",
		2: "PLACEMENT_BACKUP",
		3: "PLACEMENT_HYBRID",
	}
	PlacementStrategy_value = map[string]int32{
		"PLACEMENT_UNKNOWN": 0,
		"PLACEMENT_MEDIA":   1,
		"PLACEMENT_BACKUP":  2,
		"PLACEMENT_HYBRID":  3,
	}
)

func (x PlacementStrategy) Enum() *PlacementStrategy {
	p := new(PlacementStrategy)
	*p = x
	return p
}

func (x PlacementStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlacementStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gossip_proto_enumTypes[1].Descriptor()
}

func (PlacementStrategy) Type() protoreflect.EnumType {
	return &file_proto_gossip_proto_enumTypes[1]
}

func (x PlacementStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlacementStrategy.Descriptor instead.
func (PlacementStrategy) EnumDescriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{1}
}

type PeerStatus int32

const (
	PeerStatus_PEER_UNKNOWN   PeerStatus = 0
	PeerStatus_PEER_ALIVE     PeerStatus = 1
	PeerStatus_PEER_SUSPECTED PeerStatus = 2 // Might be down
	PeerStatus_PEER_DEAD      PeerStatus = 3 // Confirmed down
)

// Enum value maps for PeerStatus.
var (
	PeerStatus_name = map[int32]string{
		0: "PEER_UNKNOWN",
		1: "PEER_ALIVE",
		2: "PEER_SUSPECTED",
		3: "PEER_DEAD",
	}
	PeerStatus_value = map[string]int32{
		"PEER_UNKNOWN":   0,
		"PEER_ALIVE":     1,
		"PEER_SUSPECTED": 2,
		"PEER_DEAD":      3,
	}
)

func (x PeerStatus) Enum() *PeerStatus {
	p := new(PeerStatus)
	*p = x
	return p
}

func (x PeerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gossip_proto_enumTypes[2].Descriptor()
}

func (PeerStatus) Type() protoreflect.EnumType {
	return &file_proto_gossip_proto_enumTypes[2]
}

func (x PeerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerStatus.Descriptor instead.
func (PeerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{2}
}

// Main gossip message
type GossipMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          GossipType             `protobuf:"varint,1,opt,name=type,proto3,enum=collective.gossip.GossipType" json:"type,omitempty"`
	SourceAddress string                 `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"` // Federated address of sender
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`                                 // Lamport clock version
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"` // Digital signature for authenticity
	// Payload based on type
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*GossipMessage_Join
	//	*GossipMessage_Leave
	//	*GossipMessage_Update
	//	*GossipMessage_Heartbeat
	//	*GossipMessage_Sync
	Payload       isGossipMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipMessage) Reset() {
	*x = GossipMessage{}
	mi := &file_proto_gossip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipMessage) ProtoMessage() {}

func (x *GossipMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipMessage.ProtoReflect.Descriptor instead.
func (*GossipMessage) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{0}
}

func (x *GossipMessage) GetType() GossipType {
	if x != nil {
		return x.Type
	}
	return GossipType_GOSSIP_UNKNOWN
}

func (x *GossipMessage) GetSourceAddress() string {
	if x != nil {
		return x.SourceAddress
	}
	return ""
}

func (x *GossipMessage) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GossipMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GossipMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GossipMessage) GetPayload() isGossipMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GossipMessage) GetJoin() *JoinPayload {
	if x != nil {
		if x, ok := x.Payload.(*GossipMessage_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *GossipMessage) GetLeave() *LeavePayload {
	if x != nil {
		if x, ok := x.Payload.(*GossipMessage_Leave); ok {
			return x.Leave
		}
	}
	return nil
}

func (x *GossipMessage) GetUpdate() *UpdatePayload {
	if x != nil {
		if x, ok := x.Payload.(*GossipMessage_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *GossipMessage) GetHeartbeat() *HeartbeatPayload {
	if x != nil {
		if x, ok := x.Payload.(*GossipMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *GossipMessage) GetSync() *SyncPayload {
	if x != nil {
		if x, ok := x.Payload.(*GossipMessage_Sync); ok {
			return x.Sync
		}
	}
	return nil
}

type isGossipMessage_Payload interface {
	isGossipMessage_Payload()
}

type GossipMessage_Join struct {
	Join *JoinPayload `protobuf:"bytes,10,opt,name=join,proto3,oneof"`
}

type GossipMessage_Leave struct {
	Leave *LeavePayload `protobuf:"bytes,11,opt,name=leave,proto3,oneof"`
}

type GossipMessage_Update struct {
	Update *UpdatePayload `protobuf:"bytes,12,opt,name=update,proto3,oneof"`
}

type GossipMessage_Heartbeat struct {
	Heartbeat *HeartbeatPayload `protobuf:"bytes,13,opt,name=heartbeat,proto3,oneof"`
}

type GossipMessage_Sync struct {
	Sync *SyncPayload `protobuf:"bytes,14,opt,name=sync,proto3,oneof"`
}

func (*GossipMessage_Join) isGossipMessage_Payload() {}

func (*GossipMessage_Leave) isGossipMessage_Payload() {}

func (*GossipMessage_Update) isGossipMessage_Payload() {}

func (*GossipMessage_Heartbeat) isGossipMessage_Payload() {}

func (*GossipMessage_Sync) isGossipMessage_Payload() {}

// Join message when new member joins
type JoinPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberDomain  string                 `protobuf:"bytes,1,opt,name=member_domain,json=memberDomain,proto3" json:"member_domain,omitempty"`
	Endpoints     []*PeerEndpoint        `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Datastores    []*DataStoreInfo       `protobuf:"bytes,3,rep,name=datastores,proto3" json:"datastores,omitempty"`
	CaCertificate []byte                 `protobuf:"bytes,4,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"` // Member's CA cert for trust
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinPayload) Reset() {
	*x = JoinPayload{}
	mi := &file_proto_gossip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPayload) ProtoMessage() {}

func (x *JoinPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPayload.ProtoReflect.Descriptor instead.
func (*JoinPayload) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{1}
}

func (x *JoinPayload) GetMemberDomain() string {
	if x != nil {
		return x.MemberDomain
	}
	return ""
}

func (x *JoinPayload) GetEndpoints() []*PeerEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *JoinPayload) GetDatastores() []*DataStoreInfo {
	if x != nil {
		return x.Datastores
	}
	return nil
}

func (x *JoinPayload) GetCaCertificate() []byte {
	if x != nil {
		return x.CaCertificate
	}
	return nil
}

// Leave message when member departs
type LeavePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemberDomain  string                 `protobuf:"bytes,1,opt,name=member_domain,json=memberDomain,proto3" json:"member_domain,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavePayload) Reset() {
	*x = LeavePayload{}
	mi := &file_proto_gossip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavePayload) ProtoMessage() {}

func (x *LeavePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavePayload.ProtoReflect.Descriptor instead.
func (*LeavePayload) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{2}
}

func (x *LeavePayload) GetMemberDomain() string {
	if x != nil {
		return x.MemberDomain
	}
	return ""
}

func (x *LeavePayload) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Update message for state changes
type UpdatePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []*PeerEndpoint        `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Datastores    []*DataStoreInfo       `protobuf:"bytes,2,rep,name=datastores,proto3" json:"datastores,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePayload) Reset() {
	*x = UpdatePayload{}
	mi := &file_proto_gossip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayload) ProtoMessage() {}

func (x *UpdatePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayload.ProtoReflect.Descriptor instead.
func (*UpdatePayload) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePayload) GetEndpoints() []*PeerEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *UpdatePayload) GetDatastores() []*DataStoreInfo {
	if x != nil {
		return x.Datastores
	}
	return nil
}

func (x *UpdatePayload) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Heartbeat for liveness detection
type HeartbeatPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnownPeers    []string               `protobuf:"bytes,1,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"`                                                                                  // List of known peer domains
	PeerVersions  map[string]uint64      `protobuf:"bytes,2,rep,name=peer_versions,json=peerVersions,proto3" json:"peer_versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Version vector for anti-entropy
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatPayload) Reset() {
	*x = HeartbeatPayload{}
	mi := &file_proto_gossip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatPayload) ProtoMessage() {}

func (x *HeartbeatPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatPayload.ProtoReflect.Descriptor instead.
func (*HeartbeatPayload) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatPayload) GetKnownPeers() []string {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

func (x *HeartbeatPayload) GetPeerVersions() map[string]uint64 {
	if x != nil {
		return x.PeerVersions
	}
	return nil
}

// Sync request for anti-entropy
type SyncPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HaveVersions  map[string]uint64      `protobuf:"bytes,1,rep,name=have_versions,json=haveVersions,proto3" json:"have_versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // What we have
	NeedPeers     []string               `protobuf:"bytes,2,rep,name=need_peers,json=needPeers,proto3" json:"need_peers,omitempty"`                                                                                     // What we need
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncPayload) Reset() {
	*x = SyncPayload{}
	mi := &file_proto_gossip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPayload) ProtoMessage() {}

func (x *SyncPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPayload.ProtoReflect.Descriptor instead.
func (*SyncPayload) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{5}
}

func (x *SyncPayload) GetHaveVersions() map[string]uint64 {
	if x != nil {
		return x.HaveVersions
	}
	return nil
}

func (x *SyncPayload) GetNeedPeers() []string {
	if x != nil {
		return x.NeedPeers
	}
	return nil
}

// Peer endpoint information
type PeerEndpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`                         // Federation domain
	DirectIps     []string               `protobuf:"bytes,2,rep,name=direct_ips,json=directIps,proto3" json:"direct_ips,omitempty"`  // Public IP addresses
	VpnIps        []string               `protobuf:"bytes,3,rep,name=vpn_ips,json=vpnIps,proto3" json:"vpn_ips,omitempty"`           // VPN addresses
	LanIps        []string               `protobuf:"bytes,4,rep,name=lan_ips,json=lanIps,proto3" json:"lan_ips,omitempty"`           // Local network addresses
	LatencyMs     int64                  `protobuf:"varint,5,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"` // Measured latency
	Preference    int32                  `protobuf:"varint,6,opt,name=preference,proto3" json:"preference,omitempty"`                // Routing preference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerEndpoint) Reset() {
	*x = PeerEndpoint{}
	mi := &file_proto_gossip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEndpoint) ProtoMessage() {}

func (x *PeerEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEndpoint.ProtoReflect.Descriptor instead.
func (*PeerEndpoint) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{6}
}

func (x *PeerEndpoint) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PeerEndpoint) GetDirectIps() []string {
	if x != nil {
		return x.DirectIps
	}
	return nil
}

func (x *PeerEndpoint) GetVpnIps() []string {
	if x != nil {
		return x.VpnIps
	}
	return nil
}

func (x *PeerEndpoint) GetLanIps() []string {
	if x != nil {
		return x.LanIps
	}
	return nil
}

func (x *PeerEndpoint) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *PeerEndpoint) GetPreference() int32 {
	if x != nil {
		return x.Preference
	}
	return 0
}

// DataStore information shared via gossip
type DataStoreInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                      // DataStore path
	OwnerAddress  string                 `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`  // Federated address of owner
	ReplicaCount  int32                  `protobuf:"varint,3,opt,name=replica_count,json=replicaCount,proto3" json:"replica_count,omitempty"` // Desired replicas
	Strategy      PlacementStrategy      `protobuf:"varint,4,opt,name=strategy,proto3,enum=collective.gossip.PlacementStrategy" json:"strategy,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"` // Total size
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStoreInfo) Reset() {
	*x = DataStoreInfo{}
	mi := &file_proto_gossip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreInfo) ProtoMessage() {}

func (x *DataStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreInfo.ProtoReflect.Descriptor instead.
func (*DataStoreInfo) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{7}
}

func (x *DataStoreInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataStoreInfo) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *DataStoreInfo) GetReplicaCount() int32 {
	if x != nil {
		return x.ReplicaCount
	}
	return 0
}

func (x *DataStoreInfo) GetStrategy() PlacementStrategy {
	if x != nil {
		return x.Strategy
	}
	return PlacementStrategy_PLACEMENT_UNKNOWN
}

func (x *DataStoreInfo) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *DataStoreInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Peer state for gossip tracking
type PeerState struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FederatedAddress string                 `protobuf:"bytes,1,opt,name=federated_address,json=federatedAddress,proto3" json:"federated_address,omitempty"`
	Endpoints        []*PeerEndpoint        `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	LastSeen         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Version          uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"` // Lamport clock
	Datastores       []string               `protobuf:"bytes,5,rep,name=datastores,proto3" json:"datastores,omitempty"`
	Status           PeerStatus             `protobuf:"varint,6,opt,name=status,proto3,enum=collective.gossip.PeerStatus" json:"status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PeerState) Reset() {
	*x = PeerState{}
	mi := &file_proto_gossip_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerState) ProtoMessage() {}

func (x *PeerState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerState.ProtoReflect.Descriptor instead.
func (*PeerState) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{8}
}

func (x *PeerState) GetFederatedAddress() string {
	if x != nil {
		return x.FederatedAddress
	}
	return ""
}

func (x *PeerState) GetEndpoints() []*PeerEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *PeerState) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *PeerState) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PeerState) GetDatastores() []string {
	if x != nil {
		return x.Datastores
	}
	return nil
}

func (x *PeerState) GetStatus() PeerStatus {
	if x != nil {
		return x.Status
	}
	return PeerStatus_PEER_UNKNOWN
}

// Request for gossip exchange
type GossipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderDomain  string                 `protobuf:"bytes,1,opt,name=sender_domain,json=senderDomain,proto3" json:"sender_domain,omitempty"`
	Messages      []*GossipMessage       `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	VersionVector map[string]uint64      `protobuf:"bytes,3,rep,name=version_vector,json=versionVector,proto3" json:"version_vector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // For anti-entropy
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipRequest) Reset() {
	*x = GossipRequest{}
	mi := &file_proto_gossip_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipRequest) ProtoMessage() {}

func (x *GossipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipRequest.ProtoReflect.Descriptor instead.
func (*GossipRequest) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{9}
}

func (x *GossipRequest) GetSenderDomain() string {
	if x != nil {
		return x.SenderDomain
	}
	return ""
}

func (x *GossipRequest) GetMessages() []*GossipMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GossipRequest) GetVersionVector() map[string]uint64 {
	if x != nil {
		return x.VersionVector
	}
	return nil
}

// Response to gossip exchange
type GossipResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ResponderDomain string                 `protobuf:"bytes,1,opt,name=responder_domain,json=responderDomain,proto3" json:"responder_domain,omitempty"`
	Messages        []*GossipMessage       `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	VersionVector   map[string]uint64      `protobuf:"bytes,3,rep,name=version_vector,json=versionVector,proto3" json:"version_vector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	NeedSync        bool                   `protobuf:"varint,4,opt,name=need_sync,json=needSync,proto3" json:"need_sync,omitempty"` // Indicates if full sync needed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GossipResponse) Reset() {
	*x = GossipResponse{}
	mi := &file_proto_gossip_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipResponse) ProtoMessage() {}

func (x *GossipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gossip_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipResponse.ProtoReflect.Descriptor instead.
func (*GossipResponse) Descriptor() ([]byte, []int) {
	return file_proto_gossip_proto_rawDescGZIP(), []int{10}
}

func (x *GossipResponse) GetResponderDomain() string {
	if x != nil {
		return x.ResponderDomain
	}
	return ""
}

func (x *GossipResponse) GetMessages() []*GossipMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GossipResponse) GetVersionVector() map[string]uint64 {
	if x != nil {
		return x.VersionVector
	}
	return nil
}

func (x *GossipResponse) GetNeedSync() bool {
	if x != nil {
		return x.NeedSync
	}
	return false
}

var File_proto_gossip_proto protoreflect.FileDescriptor

const file_proto_gossip_proto_rawDesc = "" +
	"\n" +
	"\x12proto/gossip.proto\x12\x11collective.gossip\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\x04\n" +
	"\rGossipMessage\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.collective.gossip.GossipTypeR\x04type\x12%\n" +
	"\x0esource_address\x18\x02 \x01(\tR\rsourceAddress\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\x124\n" +
	"\x04join\x18\n" +
	" \x01(\v2\x1e.collective.gossip.JoinPayloadH\x00R\x04join\x127\n" +
	"\x05leave\x18\v \x01(\v2\x1f.collective.gossip.LeavePayloadH\x00R\x05leave\x12:\n" +
	"\x06update\x18\f \x01(\v2 .collective.gossip.UpdatePayloadH\x00R\x06update\x12C\n" +
	"\theartbeat\x18\r \x01(\v2#.collective.gossip.HeartbeatPayloadH\x00R\theartbeat\x124\n" +
	"\x04sync\x18\x0e \x01(\v2\x1e.collective.gossip.SyncPayloadH\x00R\x04syncB\t\n" +
	"\apayload\"\xda\x01\n" +
	"\vJoinPayload\x12#\n" +
	"\rmember_domain\x18\x01 \x01(\tR\fmemberDomain\x12=\n" +
	"\tendpoints\x18\x02 \x03(\v2\x1f.collective.gossip.PeerEndpointR\tendpoints\x12@\n" +
	"\n" +
	"datastores\x18\x03 \x03(\v2 .collective.gossip.DataStoreInfoR\n" +
	"datastores\x12%\n" +
	"\x0eca_certificate\x18\x04 \x01(\fR\rcaCertificate\"K\n" +
	"\fLeavePayload\x12#\n" +
	"\rmember_domain\x18\x01 \x01(\tR\fmemberDomain\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x99\x02\n" +
	"\rUpdatePayload\x12=\n" +
	"\tendpoints\x18\x01 \x03(\v2\x1f.collective.gossip.PeerEndpointR\tendpoints\x12@\n" +
	"\n" +
	"datastores\x18\x02 \x03(\v2 .collective.gossip.DataStoreInfoR\n" +
	"datastores\x12J\n" +
	"\bmetadata\x18\x03 \x03(\v2..collective.gossip.UpdatePayload.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\x10HeartbeatPayload\x12\x1f\n" +
	"\vknown_peers\x18\x01 \x03(\tR\n" +
	"knownPeers\x12Z\n" +
	"\rpeer_versions\x18\x02 \x03(\v25.collective.gossip.HeartbeatPayload.PeerVersionsEntryR\fpeerVersions\x1a?\n" +
	"\x11PeerVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xc4\x01\n" +
	"\vSyncPayload\x12U\n" +
	"\rhave_versions\x18\x01 \x03(\v20.collective.gossip.SyncPayload.HaveVersionsEntryR\fhaveVersions\x12\x1d\n" +
	"\n" +
	"need_peers\x18\x02 \x03(\tR\tneedPeers\x1a?\n" +
	"\x11HaveVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xb6\x01\n" +
	"\fPeerEndpoint\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1d\n" +
	"\n" +
	"direct_ips\x18\x02 \x03(\tR\tdirectIps\x12\x17\n" +
	"\avpn_ips\x18\x03 \x03(\tR\x06vpnIps\x12\x17\n" +
	"\alan_ips\x18\x04 \x03(\tR\x06lanIps\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x05 \x01(\x03R\tlatencyMs\x12\x1e\n" +
	"\n" +
	"preference\x18\x06 \x01(\x05R\n" +
	"preference\"\xd7\x02\n" +
	"\rDataStoreInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12#\n" +
	"\rowner_address\x18\x02 \x01(\tR\fownerAddress\x12#\n" +
	"\rreplica_count\x18\x03 \x01(\x05R\freplicaCount\x12@\n" +
	"\bstrategy\x18\x04 \x01(\x0e2$.collective.gossip.PlacementStrategyR\bstrategy\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x05 \x01(\x03R\tsizeBytes\x12J\n" +
	"\bmetadata\x18\x06 \x03(\v2..collective.gossip.DataStoreInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x02\n" +
	"\tPeerState\x12+\n" +
	"\x11federated_address\x18\x01 \x01(\tR\x10federatedAddress\x12=\n" +
	"\tendpoints\x18\x02 \x03(\v2\x1f.collective.gossip.PeerEndpointR\tendpoints\x127\n" +
	"\tlast_seen\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x04R\aversion\x12\x1e\n" +
	"\n" +
	"datastores\x18\x05 \x03(\tR\n" +
	"datastores\x125\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1d.collective.gossip.PeerStatusR\x06status\"\x90\x02\n" +
	"\rGossipRequest\x12#\n" +
	"\rsender_domain\x18\x01 \x01(\tR\fsenderDomain\x12<\n" +
	"\bmessages\x18\x02 \x03(\v2 .collective.gossip.GossipMessageR\bmessages\x12Z\n" +
	"\x0eversion_vector\x18\x03 \x03(\v23.collective.gossip.GossipRequest.VersionVectorEntryR\rversionVector\x1a@\n" +
	"\x12VersionVectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xb5\x02\n" +
	"\x0eGossipResponse\x12)\n" +
	"\x10responder_domain\x18\x01 \x01(\tR\x0fresponderDomain\x12<\n" +
	"\bmessages\x18\x02 \x03(\v2 .collective.gossip.GossipMessageR\bmessages\x12[\n" +
	"\x0eversion_vector\x18\x03 \x03(\v24.collective.gossip.GossipResponse.VersionVectorEntryR\rversionVector\x12\x1b\n" +
	"\tneed_sync\x18\x04 \x01(\bR\bneedSync\x1a@\n" +
	"\x12VersionVectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01*}\n" +
	"\n" +
	"GossipType\x12\x12\n" +
	"\x0eGOSSIP_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vGOSSIP_JOIN\x10\x01\x12\x10\n" +
	"\fGOSSIP_LEAVE\x10\x02\x12\x11\n" +
	"\rGOSSIP_UPDATE\x10\x03\x12\x14\n" +
	"\x10GOSSIP_HEARTBEAT\x10\x04\x12\x0f\n" +
	"\vGOSSIP_SYNC\x10\x05*k\n" +
	"\x11PlacementStrategy\x12\x15\n" +
	"\x11PLACEMENT_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fPLACEMENT_MEDIA\x10\x01\x12\x14\n" +
	"\x10PLACEMENT_BACKUP\x10\x02\x12\x14\n" +
	"\x10PLACEMENT_HYBRID\x10\x03*Q\n" +
	"\n" +
	"PeerStatus\x12\x10\n" +
	"\fPEER_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"PEER_ALIVE\x10\x01\x12\x12\n" +
	"\x0ePEER_SUSPECTED\x10\x02\x12\r\n" +
	"\tPEER_DEAD\x10\x032\xbe\x01\n" +
	"\rGossipService\x12U\n" +
	"\x0eGossipExchange\x12 .collective.gossip.GossipRequest\x1a!.collective.gossip.GossipResponse\x12V\n" +
	"\fGossipStream\x12 .collective.gossip.GossipMessage\x1a .collective.gossip.GossipMessage(\x010\x01B\x19Z\x17collective/pkg/protocolb\x06proto3"

var (
	file_proto_gossip_proto_rawDescOnce sync.Once
	file_proto_gossip_proto_rawDescData []byte
)

func file_proto_gossip_proto_rawDescGZIP() []byte {
	file_proto_gossip_proto_rawDescOnce.Do(func() {
		file_proto_gossip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_gossip_proto_rawDesc), len(file_proto_gossip_proto_rawDesc)))
	})
	return file_proto_gossip_proto_rawDescData
}

var file_proto_gossip_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_gossip_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_gossip_proto_goTypes = []any{
	(GossipType)(0),               // 0: collective.gossip.GossipType
	(PlacementStrategy)(0),        // 1: collective.gossip.PlacementStrategy
	(PeerStatus)(0),               // 2: collective.gossip.PeerStatus
	(*GossipMessage)(nil),         // 3: collective.gossip.GossipMessage
	(*JoinPayload)(nil),           // 4: collective.gossip.JoinPayload
	(*LeavePayload)(nil),          // 5: collective.gossip.LeavePayload
	(*UpdatePayload)(nil),         // 6: collective.gossip.UpdatePayload
	(*HeartbeatPayload)(nil),      // 7: collective.gossip.HeartbeatPayload
	(*SyncPayload)(nil),           // 8: collective.gossip.SyncPayload
	(*PeerEndpoint)(nil),          // 9: collective.gossip.PeerEndpoint
	(*DataStoreInfo)(nil),         // 10: collective.gossip.DataStoreInfo
	(*PeerState)(nil),             // 11: collective.gossip.PeerState
	(*GossipRequest)(nil),         // 12: collective.gossip.GossipRequest
	(*GossipResponse)(nil),        // 13: collective.gossip.GossipResponse
	nil,                           // 14: collective.gossip.UpdatePayload.MetadataEntry
	nil,                           // 15: collective.gossip.HeartbeatPayload.PeerVersionsEntry
	nil,                           // 16: collective.gossip.SyncPayload.HaveVersionsEntry
	nil,                           // 17: collective.gossip.DataStoreInfo.MetadataEntry
	nil,                           // 18: collective.gossip.GossipRequest.VersionVectorEntry
	nil,                           // 19: collective.gossip.GossipResponse.VersionVectorEntry
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_proto_gossip_proto_depIdxs = []int32{
	0,  // 0: collective.gossip.GossipMessage.type:type_name -> collective.gossip.GossipType
	20, // 1: collective.gossip.GossipMessage.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 2: collective.gossip.GossipMessage.join:type_name -> collective.gossip.JoinPayload
	5,  // 3: collective.gossip.GossipMessage.leave:type_name -> collective.gossip.LeavePayload
	6,  // 4: collective.gossip.GossipMessage.update:type_name -> collective.gossip.UpdatePayload
	7,  // 5: collective.gossip.GossipMessage.heartbeat:type_name -> collective.gossip.HeartbeatPayload
	8,  // 6: collective.gossip.GossipMessage.sync:type_name -> collective.gossip.SyncPayload
	9,  // 7: collective.gossip.JoinPayload.endpoints:type_name -> collective.gossip.PeerEndpoint
	10, // 8: collective.gossip.JoinPayload.datastores:type_name -> collective.gossip.DataStoreInfo
	9,  // 9: collective.gossip.UpdatePayload.endpoints:type_name -> collective.gossip.PeerEndpoint
	10, // 10: collective.gossip.UpdatePayload.datastores:type_name -> collective.gossip.DataStoreInfo
	14, // 11: collective.gossip.UpdatePayload.metadata:type_name -> collective.gossip.UpdatePayload.MetadataEntry
	15, // 12: collective.gossip.HeartbeatPayload.peer_versions:type_name -> collective.gossip.HeartbeatPayload.PeerVersionsEntry
	16, // 13: collective.gossip.SyncPayload.have_versions:type_name -> collective.gossip.SyncPayload.HaveVersionsEntry
	1,  // 14: collective.gossip.DataStoreInfo.strategy:type_name -> collective.gossip.PlacementStrategy
	17, // 15: collective.gossip.DataStoreInfo.metadata:type_name -> collective.gossip.DataStoreInfo.MetadataEntry
	9,  // 16: collective.gossip.PeerState.endpoints:type_name -> collective.gossip.PeerEndpoint
	20, // 17: collective.gossip.PeerState.last_seen:type_name -> google.protobuf.Timestamp
	2,  // 18: collective.gossip.PeerState.status:type_name -> collective.gossip.PeerStatus
	3,  // 19: collective.gossip.GossipRequest.messages:type_name -> collective.gossip.GossipMessage
	18, // 20: collective.gossip.GossipRequest.version_vector:type_name -> collective.gossip.GossipRequest.VersionVectorEntry
	3,  // 21: collective.gossip.GossipResponse.messages:type_name -> collective.gossip.GossipMessage
	19, // 22: collective.gossip.GossipResponse.version_vector:type_name -> collective.gossip.GossipResponse.VersionVectorEntry
	12, // 23: collective.gossip.GossipService.GossipExchange:input_type -> collective.gossip.GossipRequest
	3,  // 24: collective.gossip.GossipService.GossipStream:input_type -> collective.gossip.GossipMessage
	13, // 25: collective.gossip.GossipService.GossipExchange:output_type -> collective.gossip.GossipResponse
	3,  // 26: collective.gossip.GossipService.GossipStream:output_type -> collective.gossip.GossipMessage
	25, // [25:27] is the sub-list for method output_type
	23, // [23:25] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_gossip_proto_init() }
func file_proto_gossip_proto_init() {
	if File_proto_gossip_proto != nil {
		return
	}
	file_proto_gossip_proto_msgTypes[0].OneofWrappers = []any{
		(*GossipMessage_Join)(nil),
		(*GossipMessage_Leave)(nil),
		(*GossipMessage_Update)(nil),
		(*GossipMessage_Heartbeat)(nil),
		(*GossipMessage_Sync)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_gossip_proto_rawDesc), len(file_proto_gossip_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_gossip_proto_goTypes,
		DependencyIndexes: file_proto_gossip_proto_depIdxs,
		EnumInfos:         file_proto_gossip_proto_enumTypes,
		MessageInfos:      file_proto_gossip_proto_msgTypes,
	}.Build()
	File_proto_gossip_proto = out.File
	file_proto_gossip_proto_goTypes = nil
	file_proto_gossip_proto_depIdxs = nil
}
